#!/usr/bin/env python3
"""
Copyright © 2021, 2022 Eli Array Minkoff
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
import subprocess


def print_copyright():
    print("usb_boot Copyright © 2021 Eli Array Minkoff.")
    print("This program comes with ABSOLUTELY NO WARRANTY; for details, see the LICENCE file.")
    print("This is free software, and you are welcome to redistribute it under certain conditions; for details, see the LICENCE file.")
    print("\n\n")


GUEST_RAM = 512


def lsusb():
    """Call the lsusb system command, and return its output as list of lines"""
    os_lsusb = subprocess.run(['lsusb'],
                              capture_output=True,
                              universal_newlines=True)
    return os_lsusb.stdout.split('\n')[:-1]  # skip blank line at the end


"""
lsusb outputs a list of USB devices with the following format:
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 002: ID 0810:e601 Personal Communication Systems, Inc. SNES Gamepad
Bus 001 Device 005: ID 057e:200e Nintendo Co., Ltd Joy-Con Charging Grip
Bus 001 Device 006: ID 05ac:0202 Apple, Inc. Keyboard [ALPS]
"""

if __name__ == "__main__":
    # Print copyright notice
    print_copyright()
    # parse out the output of the lsusb command
    usb_devices = []
    for line in lsusb():
        # here, we only need the bus and device ids
        address = line.split(':')[0]
        # split the string 'Bus 00X Device 00X' into its component parts
        address_components = address.split(' ')
        bus = address_components[1]
        dev = address_components[3]
        # each entry contains the bus/device pair and the original line
        usb_devices.append([[bus, dev], line])

    # print out the devices in a numbered list, and ask for selection
    for i in range(len(usb_devices)):
        print(f'{i} | {usb_devices[i][1]}')
    selection = -1
    while selection < 0:
        try:
            selection = int(input("Enter the number of your selection: "))
            subprocess.run(['sudo', 'qemu-system-x86_64', '-m', str(GUEST_RAM),
                            '-enable-kvm', '-usb', '-device',
                            'usb-host,hostbus={},hostaddr={}'.format(
                usb_devices[selection][0][0],
                usb_devices[selection][0][1])])
        except Exception as e:
            print("An error occured: ")
            print(e)
            c = ''
            while c not in 'yn':
                c = input("Do you want to try again? (y/n): ").lower().strip()
            if c == 'y':
                selection = -1
            else:
                exit()
